// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  userId    String    @unique
  password  String
  profile   String
  role      String
  nickname  String    @unique
  createdAt DateTime  @default(now())
  posts     Post[]    @relation("UserPosts")
  comments  Comment[] @relation("UserComments")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  userId    Int
  mainImg   String
  createdAt DateTime  @default(now())
  user      User      @relation("UserPosts", fields: [userId], references: [id], onDelete: Cascade)
  comments  Comment[] @relation("PostComments")
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  postId    Int
  userId    Int
  parentId  Int?
  createdAt DateTime  @default(now())
  post      Post      @relation("PostComments", fields: [postId], references: [id], onDelete: Cascade)
  user      User      @relation("UserComments", fields: [userId], references: [id], onDelete: Cascade)
  parent    Comment?  @relation("ParentComment", fields: [parentId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("ParentComment")
}
